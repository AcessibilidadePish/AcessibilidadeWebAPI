// <auto-generated />
using AcessibilidadeWebAPI.BancoDados;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AcessibilidadeWebAPI.Migrations
{
    [DbContext(typeof(AcessibilidadeDbContext))]
    [Migration("20250624014802_AlterTableLocal")]
    partial class AlterTableLocal
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AcessibilidadeWebAPI.Entidades.Deficiente", b =>
                {
                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    b.Property<int>("TipoDeficiencia")
                        .HasColumnType("int")
                        .HasColumnName("tipoDeficiencia");

                    b.HasKey("IdUsuario");

                    b.HasIndex(new[] { "IdUsuario" }, "IX_deficiente_idUsuario");

                    b.ToTable("deficiente", (string)null);
                });

            modelBuilder.Entity("AcessibilidadeWebAPI.Entidades.Local", b =>
                {
                    b.Property<int>("IdLocal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idLocal");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLocal"));

                    b.Property<int>("AvaliacaoAcessibilidade")
                        .HasColumnType("int")
                        .HasColumnName("avaliacaoAcessibilidade");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("descricao");

                    b.Property<int>("Latitude")
                        .HasColumnType("int")
                        .HasColumnName("latitude");

                    b.Property<int>("Longitude")
                        .HasColumnType("int")
                        .HasColumnName("longitude");

                    b.HasKey("IdLocal");

                    b.ToTable("local", (string)null);
                });

            modelBuilder.Entity("AcessibilidadeWebAPI.Entidades.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nome");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("senha");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("telefone");

                    b.HasKey("IdUsuario");

                    b.ToTable("usuario", (string)null);
                });

            modelBuilder.Entity("AcessibilidadeWebAPI.Entidades.Voluntario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    b.Property<int>("Avaliacao")
                        .HasColumnType("int")
                        .HasColumnName("avaliacao");

                    b.Property<bool>("Disponivel")
                        .HasColumnType("bit")
                        .HasColumnName("disponivel");

                    b.HasKey("IdUsuario");

                    b.HasIndex(new[] { "IdUsuario" }, "IX_voluntario_idUsuario");

                    b.ToTable("voluntario", (string)null);
                });

            modelBuilder.Entity("AcessibilidadeWebAPI.Entidades.Deficiente", b =>
                {
                    b.HasOne("AcessibilidadeWebAPI.Entidades.Usuario", "IdUsuarioNavigation")
                        .WithMany("Deficientes")
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("FK_deficiente_idUsuario_usuario_idUsuario");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("AcessibilidadeWebAPI.Entidades.Voluntario", b =>
                {
                    b.HasOne("AcessibilidadeWebAPI.Entidades.Usuario", "IdUsuarioNavigation")
                        .WithMany("Voluntarios")
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("FK_voluntario_idUsuario_usuario_idUsuario");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("AcessibilidadeWebAPI.Entidades.Usuario", b =>
                {
                    b.Navigation("Deficientes");

                    b.Navigation("Voluntarios");
                });
#pragma warning restore 612, 618
        }
    }
}
