// <auto-generated />
using System;
using AcessibilidadeWebAPI.BancoDados;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AcessibilidadeWebAPI.Migrations
{
    [DbContext(typeof(AcessibilidadeDbContext))]
    [Migration("20250628184708_RemoverTelefoneDeVoluntario")]
    partial class RemoverTelefoneDeVoluntario
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AcessibilidadeWebAPI.Entidades.Assistencia", b =>
                {
                    b.Property<int>("IdAssistencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idAssistencia");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAssistencia"));

                    b.Property<DateTimeOffset>("DataAceite")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("dataAceite");

                    b.Property<DateTimeOffset?>("DataConclusao")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("dataConclusao");

                    b.Property<int?>("DeficienteIdUsuario")
                        .HasColumnType("int");

                    b.Property<int>("SolicitacaoAjudaId")
                        .HasColumnType("int")
                        .HasColumnName("idSolicitacaoAjuda");

                    b.Property<int>("VoluntarioUsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    b.HasKey("IdAssistencia");

                    b.HasIndex("DeficienteIdUsuario");

                    b.HasIndex("SolicitacaoAjudaId");

                    b.HasIndex("VoluntarioUsuarioId");

                    b.ToTable("assistencia", (string)null);
                });

            modelBuilder.Entity("AcessibilidadeWebAPI.Entidades.AvaliacaoLocal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idAvaliacaoLocal");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Acessivel")
                        .HasColumnType("bit")
                        .HasColumnName("acessivel");

                    b.Property<int>("DispositivoId")
                        .HasColumnType("int")
                        .HasColumnName("idDispositivo");

                    b.Property<int>("LocalId")
                        .HasColumnType("int")
                        .HasColumnName("idLocal");

                    b.Property<string>("Observacoes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("observacao");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2")
                        .HasColumnName("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("DispositivoId");

                    b.HasIndex("LocalId");

                    b.ToTable("avaliacaoLocal", (string)null);
                });

            modelBuilder.Entity("AcessibilidadeWebAPI.Entidades.Deficiente", b =>
                {
                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    b.Property<int>("TipoDeficiencia")
                        .HasColumnType("int")
                        .HasColumnName("tipoDeficiencia");

                    b.HasKey("IdUsuario");

                    b.HasIndex(new[] { "IdUsuario" }, "IX_deficiente_idUsuario");

                    b.ToTable("deficiente", (string)null);
                });

            modelBuilder.Entity("AcessibilidadeWebAPI.Entidades.Dispositivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("datetime2")
                        .HasColumnName("dataRegistro");

                    b.Property<string>("NumeroSerie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("numeroSerie");

                    b.Property<int>("UsuarioProprietarioId")
                        .HasColumnType("int")
                        .HasColumnName("usuarioProprietarioId");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioProprietarioId");

                    b.ToTable("dispositivo", (string)null);
                });

            modelBuilder.Entity("AcessibilidadeWebAPI.Entidades.HistoricoStatusSolicitacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataMudanca")
                        .HasColumnType("datetime2")
                        .HasColumnName("dataMudanca");

                    b.Property<int>("SolicitacaoAjudaId")
                        .HasColumnType("int")
                        .HasColumnName("solicitacaoAjudaId");

                    b.Property<int>("StatusAnterior")
                        .HasColumnType("int")
                        .HasColumnName("statusAnterior");

                    b.Property<int>("StatusAtual")
                        .HasColumnType("int")
                        .HasColumnName("statusAtual");

                    b.HasKey("Id");

                    b.HasIndex("SolicitacaoAjudaId");

                    b.ToTable("historicoStatusSolicitacao", (string)null);
                });

            modelBuilder.Entity("AcessibilidadeWebAPI.Entidades.Local", b =>
                {
                    b.Property<int>("IdLocal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idLocal");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLocal"));

                    b.Property<int>("AvaliacaoAcessibilidade")
                        .HasColumnType("int")
                        .HasColumnName("avaliacaoAcessibilidade");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("descricao");

                    b.Property<int>("Latitude")
                        .HasColumnType("int")
                        .HasColumnName("latitude");

                    b.Property<int>("Longitude")
                        .HasColumnType("int")
                        .HasColumnName("longitude");

                    b.HasKey("IdLocal");

                    b.ToTable("local", (string)null);
                });

            modelBuilder.Entity("AcessibilidadeWebAPI.Entidades.SolicitacaoAjuda", b =>
                {
                    b.Property<int>("IdSolicitacaoAjuda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idSolicitacaoAjuda");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSolicitacaoAjuda"));

                    b.Property<DateTime?>("DataResposta")
                        .HasColumnType("datetime2")
                        .HasColumnName("dataResposta");

                    b.Property<DateTime>("DataSolicitacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("dataSolicitacao");

                    b.Property<int>("DeficienteUsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("descricao");

                    b.Property<string>("EnderecoReferencia")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("enderecoReferencia");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float")
                        .HasColumnName("latitude");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float")
                        .HasColumnName("longitude");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("IdSolicitacaoAjuda");

                    b.HasIndex("DeficienteUsuarioId");

                    b.ToTable("solicitacaoAjuda", (string)null);
                });

            modelBuilder.Entity("AcessibilidadeWebAPI.Entidades.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nome");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("senha");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("telefone");

                    b.HasKey("IdUsuario");

                    b.ToTable("usuario", (string)null);
                });

            modelBuilder.Entity("AcessibilidadeWebAPI.Entidades.Voluntario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    b.Property<decimal>("Avaliacao")
                        .HasColumnType("decimal(3,2)")
                        .HasColumnName("avaliacao");

                    b.Property<bool>("Disponivel")
                        .HasColumnType("bit")
                        .HasColumnName("disponivel");

                    b.HasKey("IdUsuario");

                    b.HasIndex(new[] { "IdUsuario" }, "IX_voluntario_idUsuario");

                    b.ToTable("voluntario", (string)null);
                });

            modelBuilder.Entity("AcessibilidadeWebAPI.Entidades.Assistencia", b =>
                {
                    b.HasOne("AcessibilidadeWebAPI.Entidades.Deficiente", null)
                        .WithMany("Assistencias")
                        .HasForeignKey("DeficienteIdUsuario");

                    b.HasOne("AcessibilidadeWebAPI.Entidades.SolicitacaoAjuda", "SolicitacaoAjudaNavigation")
                        .WithMany("Assistencias")
                        .HasForeignKey("SolicitacaoAjudaId")
                        .IsRequired()
                        .HasConstraintName("FK_assistencia_idSolicitacaoAjuda_solicitacaoAjuda_idSolicitacaoAjuda");

                    b.HasOne("AcessibilidadeWebAPI.Entidades.Voluntario", "VoluntarioUsuarioNavigation")
                        .WithMany("Assistencias")
                        .HasForeignKey("VoluntarioUsuarioId")
                        .IsRequired()
                        .HasConstraintName("FK_assistencia_idUsuario_voluntario_idUsuario");

                    b.Navigation("SolicitacaoAjudaNavigation");

                    b.Navigation("VoluntarioUsuarioNavigation");
                });

            modelBuilder.Entity("AcessibilidadeWebAPI.Entidades.AvaliacaoLocal", b =>
                {
                    b.HasOne("AcessibilidadeWebAPI.Entidades.Dispositivo", "DispositivoNavigation")
                        .WithMany("AvaliacaoLocals")
                        .HasForeignKey("DispositivoId")
                        .IsRequired()
                        .HasConstraintName("FK_avaliacaoLocal_idDispositivo_dispositivo_id");

                    b.HasOne("AcessibilidadeWebAPI.Entidades.Local", "LocalNavigation")
                        .WithMany("AvaliacaoLocals")
                        .HasForeignKey("LocalId")
                        .IsRequired()
                        .HasConstraintName("FK_avaliacaoLocal_idLocal_local_idLocal");

                    b.Navigation("DispositivoNavigation");

                    b.Navigation("LocalNavigation");
                });

            modelBuilder.Entity("AcessibilidadeWebAPI.Entidades.Deficiente", b =>
                {
                    b.HasOne("AcessibilidadeWebAPI.Entidades.Usuario", "IdUsuarioNavigation")
                        .WithMany("Deficientes")
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("FK_deficiente_idUsuario_usuario_idUsuario");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("AcessibilidadeWebAPI.Entidades.Dispositivo", b =>
                {
                    b.HasOne("AcessibilidadeWebAPI.Entidades.Usuario", "UsuarioProprietarioNavigation")
                        .WithMany("Dispositivos")
                        .HasForeignKey("UsuarioProprietarioId")
                        .IsRequired()
                        .HasConstraintName("FK_dispositivo_usuarioProprietarioId_usuario_idUsuario");

                    b.Navigation("UsuarioProprietarioNavigation");
                });

            modelBuilder.Entity("AcessibilidadeWebAPI.Entidades.HistoricoStatusSolicitacao", b =>
                {
                    b.HasOne("AcessibilidadeWebAPI.Entidades.SolicitacaoAjuda", "SolicitacaoAjudaNavigation")
                        .WithMany("HistoricoStatusSolicitacao")
                        .HasForeignKey("SolicitacaoAjudaId")
                        .IsRequired()
                        .HasConstraintName("FK_historicoStatusSolicitacao_solicitacaoAjudaId_solicitacaoAjuda_idSolicitacaoAjuda");

                    b.Navigation("SolicitacaoAjudaNavigation");
                });

            modelBuilder.Entity("AcessibilidadeWebAPI.Entidades.SolicitacaoAjuda", b =>
                {
                    b.HasOne("AcessibilidadeWebAPI.Entidades.Deficiente", "DeficienteUsuarioNavigation")
                        .WithMany("SolicitacaoAjudas")
                        .HasForeignKey("DeficienteUsuarioId")
                        .IsRequired()
                        .HasConstraintName("FK_solicitacaoAjudae_idUsuario_deficiente_idUsuario");

                    b.Navigation("DeficienteUsuarioNavigation");
                });

            modelBuilder.Entity("AcessibilidadeWebAPI.Entidades.Voluntario", b =>
                {
                    b.HasOne("AcessibilidadeWebAPI.Entidades.Usuario", "IdUsuarioNavigation")
                        .WithMany("Voluntarios")
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("FK_voluntario_idUsuario_usuario_idUsuario");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("AcessibilidadeWebAPI.Entidades.Deficiente", b =>
                {
                    b.Navigation("Assistencias");

                    b.Navigation("SolicitacaoAjudas");
                });

            modelBuilder.Entity("AcessibilidadeWebAPI.Entidades.Dispositivo", b =>
                {
                    b.Navigation("AvaliacaoLocals");
                });

            modelBuilder.Entity("AcessibilidadeWebAPI.Entidades.Local", b =>
                {
                    b.Navigation("AvaliacaoLocals");
                });

            modelBuilder.Entity("AcessibilidadeWebAPI.Entidades.SolicitacaoAjuda", b =>
                {
                    b.Navigation("Assistencias");

                    b.Navigation("HistoricoStatusSolicitacao");
                });

            modelBuilder.Entity("AcessibilidadeWebAPI.Entidades.Usuario", b =>
                {
                    b.Navigation("Deficientes");

                    b.Navigation("Dispositivos");

                    b.Navigation("Voluntarios");
                });

            modelBuilder.Entity("AcessibilidadeWebAPI.Entidades.Voluntario", b =>
                {
                    b.Navigation("Assistencias");
                });
#pragma warning restore 612, 618
        }
    }
}
